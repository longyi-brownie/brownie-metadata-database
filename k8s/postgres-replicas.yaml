apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-replicas
  namespace: brownie-metadata
spec:
  serviceName: postgres-replicas
  replicas: 3  # 3 read replicas
  selector:
    matchLabels:
      app: postgres-replica
  template:
    metadata:
      labels:
        app: postgres-replica
    spec:
      containers:
      - name: postgres
        image: postgres:16-alpine
        ports:
        - containerPort: 5432
        env:
        - name: PGUSER
          value: "replicator"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: brownie-metadata-secrets
              key: postgres-replication-password
        - name: POSTGRES_MASTER_SERVICE
          value: "postgres-primary"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        command:
        - /bin/bash
        - -c
        - |
          set -e
          # Wait for primary to be ready
          until pg_isready -h $POSTGRES_MASTER_SERVICE -p 5432 -U $PGUSER; do
            echo "Waiting for primary database..."
            sleep 2
          done
          
          # Initialize replica
          if [ ! -f /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
            echo "Initializing replica..."
            pg_basebackup -h $POSTGRES_MASTER_SERVICE -D /var/lib/postgresql/data/pgdata -U $PGUSER -v -P -W
            echo "standby_mode = 'on'" >> /var/lib/postgresql/data/pgdata/recovery.conf
            echo "primary_conninfo = 'host=$POSTGRES_MASTER_SERVICE port=5432 user=$PGUSER'" >> /var/lib/postgresql/data/pgdata/recovery.conf
          fi
          
          # Start PostgreSQL
          postgres
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - replicator
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - replicator
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-replica-storage
  volumeClaimTemplates:
  - metadata:
      name: postgres-replica-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi
      storageClassName: "fast-ssd"

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-replicas
  namespace: brownie-metadata
spec:
  selector:
    app: postgres-replica
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

---
# Service for load balancing reads
apiVersion: v1
kind: Service
metadata:
  name: postgres-read
  namespace: brownie-metadata
spec:
  selector:
    app: postgres-replica
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

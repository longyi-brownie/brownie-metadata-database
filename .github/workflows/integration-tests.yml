name: Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install black isort flake8 mypy
      
      - name: Run Black
        run: black --check --diff .
      
      - name: Run isort
        run: isort --check-only --diff .
      
      - name: Run flake8
        run: flake8 .
      
      - name: Run mypy
        run: mypy .

  full-integration:
    runs-on: ubuntu-latest
    needs: lint-and-format
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov requests
      
      - name: Generate SSL certificates
        run: |
          chmod +x scripts/setup-dev-certs.sh
          ./scripts/setup-dev-certs.sh
      
      - name: Build Docker images
        run: |
          docker build -f Dockerfile -t brownie-metadata-migrate:test . --progress=plain
          docker build -f Dockerfile.metrics -t brownie-metadata-metrics:test . --progress=plain
      
      - name: Start Docker Compose stack
        run: |
          docker compose up -d
      
      - name: Wait for services to be ready
        run: |
          sleep 30
          docker compose ps
      
      - name: Run tests
        run: |
          python3 -m pytest tests/ -v --cov=src --cov-report=xml --cov-report=html
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Cleanup
        if: always()
        run: |
          docker compose down -v